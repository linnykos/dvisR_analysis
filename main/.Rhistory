cell_type <- read.csv("../../data/esvd_cell_type.csv")
dat[1:5,1:5]
head(cell_type)
dim(dat)
dim(cell_type)
col_vec <- as.numeric(as.factor(cell_type$level1class))
head(cell_type)
cell_type <- read.csv("../../data/esvd_cell_type.csv", row.names = NULL)
head(cell_type)
cell_type <- read.csv("../../data/esvd_cell_type.csv", row.names = NA)
cell_type <- read.csv("../../data/esvd_cell_type.csv", row.names = 1)
head(cell_type)
dat[1:5,1:5]
dat <- read.csv("../../data/esvd_preprocessed.csv", row.names = 1)
cell_type <- read.csv("../../data/esvd_cell_type.csv", row.names = 1)
dat[1:5,1:5]
head(cell_type)
dim(dat)
dim(cell_type)
col_vec <- as.numeric(as.factor(cell_type$cell_type))
table(col_vec)
cluster_vec <- as.numeric(as.factor(cell_type$cell_type))
table(cluster_vec)
color_func <- function(alpha = 0.2){
c(rgb(240/255, 228/255, 66/255, alpha), #yellow
rgb(86/255, 180/255, 233/255, alpha), #skyblue
rgb(0/255, 158/255, 115/255, alpha), #bluish green
rgb(0/255, 114/255, 178/255,alpha), #blue
rgb(230/255, 159/255, 0/255,alpha), #orange
rgb(100/255, 100/255, 100/255, alpha)) #gray
}
color_name_vec <- c("yellow", "skyblue", "bluish green", "blue", "orange", "gray")
num_order_vec_esvd <- c(5, rep(3,2), c(6,1,1,4,4,4), rep(2,2),  rep(5,2))
col_vec_esvd <- color_func(1)[num_order_vec_esvd]
col_name_esvd <- color_name_vec[num_order_vec_esvd]
order_vec_esvd <- c(3, 5.1, 5.2, seq(6.1, 6.6, by = 0.1), 4.1, 4.2, 2, 1)
col_info_esvd <- data.frame(name = levels(cell_type_vec),
idx = sort(unique(cluster_labels)),
order = order_vec_esvd,
col_name = col_name_esvd,
col_code = col_vec_esvd)
cluster_vec <- as.numeric(as.factor(cell_type$cell_type))
table(cluster_vec)
color_func <- function(alpha = 0.2){
c(rgb(240/255, 228/255, 66/255, alpha), #yellow
rgb(86/255, 180/255, 233/255, alpha), #skyblue
rgb(0/255, 158/255, 115/255, alpha), #bluish green
rgb(0/255, 114/255, 178/255,alpha), #blue
rgb(230/255, 159/255, 0/255,alpha), #orange
rgb(100/255, 100/255, 100/255, alpha)) #gray
}
color_name_vec <- c("yellow", "skyblue", "bluish green", "blue", "orange", "gray")
num_order_vec_esvd <- c(5, rep(3,2), c(6,1,1,4,4,4), rep(2,2),  rep(5,2))
col_vec_esvd <- color_func(1)[num_order_vec_esvd]
col_name_esvd <- color_name_vec[num_order_vec_esvd]
order_vec_esvd <- c(3, 5.1, 5.2, seq(6.1, 6.6, by = 0.1), 4.1, 4.2, 2, 1)
col_info_esvd <- data.frame(name = levels(cell_type$cell_type),
idx = sort(unique(cluster_labels)),
order = order_vec_esvd,
col_name = col_name_esvd,
col_code = col_vec_esvd)
cluster_labels <- as.numeric(as.factor(cell_type$cell_type))
table(cluster_labels)
color_func <- function(alpha = 0.2){
c(rgb(240/255, 228/255, 66/255, alpha), #yellow
rgb(86/255, 180/255, 233/255, alpha), #skyblue
rgb(0/255, 158/255, 115/255, alpha), #bluish green
rgb(0/255, 114/255, 178/255,alpha), #blue
rgb(230/255, 159/255, 0/255,alpha), #orange
rgb(100/255, 100/255, 100/255, alpha)) #gray
}
color_name_vec <- c("yellow", "skyblue", "bluish green", "blue", "orange", "gray")
num_order_vec_esvd <- c(5, rep(3,2), c(6,1,1,4,4,4), rep(2,2),  rep(5,2))
col_vec_esvd <- color_func(1)[num_order_vec_esvd]
col_name_esvd <- color_name_vec[num_order_vec_esvd]
order_vec_esvd <- c(3, 5.1, 5.2, seq(6.1, 6.6, by = 0.1), 4.1, 4.2, 2, 1)
col_info_esvd <- data.frame(name = levels(cell_type$cell_type),
idx = sort(unique(cluster_labels)),
order = order_vec_esvd,
col_name = col_name_esvd,
col_code = col_vec_esvd)
cluster_labels <- as.numeric(as.factor(cell_type$cell_type))
table(cluster_labels)
cluster_labels <- as.numeric(as.factor(cell_type$cell_type))
table(cluster_labels)
color_func <- function(alpha = 0.2){
c(rgb(240/255, 228/255, 66/255, alpha), #yellow
rgb(86/255, 180/255, 233/255, alpha), #skyblue
rgb(0/255, 158/255, 115/255, alpha), #bluish green
rgb(0/255, 114/255, 178/255,alpha), #blue
rgb(230/255, 159/255, 0/255,alpha), #orange
rgb(100/255, 100/255, 100/255, alpha)) #gray
}
color_name_vec <- c("yellow", "skyblue", "bluish green", "blue", "orange", "gray")
num_order_vec_esvd <- c(5, rep(3,2), c(6,1,1,4,4,4), rep(2,2),  rep(5,2))
col_vec_esvd <- color_func(1)[num_order_vec_esvd]
col_name_esvd <- color_name_vec[num_order_vec_esvd]
order_vec_esvd <- c(3, 5.1, 5.2, seq(6.1, 6.6, by = 0.1), 4.1, 4.2, 2, 1)
col_info_esvd <- data.frame(name = levels(cell_type$cell_type),
idx = sort(unique(cluster_labels)),
order = order_vec_esvd,
col_name = col_name_esvd,
col_code = col_vec_esvd)
cluster_labels <- as.numeric(as.factor(cell_type$cell_type))
table(cluster_labels)
color_func <- function(alpha = 0.2){
c(rgb(240/255, 228/255, 66/255, alpha), #yellow
rgb(86/255, 180/255, 233/255, alpha), #skyblue
rgb(0/255, 158/255, 115/255, alpha), #bluish green
rgb(0/255, 114/255, 178/255,alpha), #blue
rgb(230/255, 159/255, 0/255,alpha), #orange
rgb(100/255, 100/255, 100/255, alpha)) #gray
}
color_name_vec <- c("yellow", "skyblue", "bluish green", "blue", "orange", "gray")
num_order_vec_esvd <- c(5, rep(3,2), c(6,1,1,4,4,4), rep(2,2),  rep(5,2))
col_vec_esvd <- color_func(1)[num_order_vec_esvd]
col_name_esvd <- color_name_vec[num_order_vec_esvd]
order_vec_esvd <- c(3, 5.1, 5.2, seq(6.1, 6.6, by = 0.1), 4.1, 4.2, 2, 1)
col_info_esvd <- data.frame(name = levels(as.factor(cell_type$cell_type)),
idx = sort(unique(cluster_labels)),
order = order_vec_esvd,
col_name = col_name_esvd,
col_code = col_vec_esvd)
col_info_esvd$factor_idx <- as.numeric(as.factor(col_info_esvd$col_name))
col_info_esvd[,c(5,6)] <- col_info_esvd[,c(6,5)]
colnames(col_info_esvd)[c(5,6)] <- colnames(col_info_esvd)[c(6,5)]
col_info_esvd
# check that umap still looks good
set.seed(10)
umap_res <- uwot::umap(dat, verbose = T)
plot(umap_res[,1], umap_res[,2], asp = T, col = col_vec, pch = 16)
plot(umap_res[,1], umap_res[,2], asp = T, col = col_info_esvd$col_code[cluster_labels], pch = 16)
par(mfrow = c(2,2))
for(i in 1:4){
set.seed(i)
rand_vec <- sample(1:ncol(dat), 2)
i <- rand_vec[1]; j <- rand_vec[2]
plot(dat[,i], dat[,j], col = col_info_esvd$col_code[cluster_labels],
pch = 16, xlab = paste0(colnames(dat)[i], ", (", i, ")"),
ylab = paste0(colnames(dat)[j], ", (", j, ")"))
}
cor_mat <- stats::cor(dat)
cor_mat[upper.tri(cor_mat, diag = T)] <- NA
cor_mat[1:5,1:5]
# plot the smallest correlations
vec <- sort(cor_mat, decreasing = T, na.rm = T)
# plot the smallest correlations
vec <- sort(cor_mat, decreasing = T)
head(vec)
i=1
idx <- which(cor_mat == cor_vec[i], arr.ind = T)
# plot the smallest correlations
cor_vec <- sort(cor_mat, decreasing = T)
idx <- which(cor_mat == cor_vec[i], arr.ind = T)
# plot the smallest correlations
cor_vec <- sort(cor_mat, decreasing = T)
par(mfrow = c(2,2))
for(i in 1:4){
idx <- which(cor_mat == cor_vec[i], arr.ind = T)
idx1 <- idx[1]; idx2 <- idx[2]
plot(dat[,idx1], dat[,idx2], col = col_info_esvd$col_code[cluster_labels],
pch = 16, xlab = paste0(colnames(dat)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat)[idx2], ", (", idx2, ")"))
}
plot(sort(cor_vec))
# plot the smallest correlations
cor_vec <- sort(abs(cor_mat), decreasing = T)
#plot the high correlations
par(mfrow = c(2,2))
for(i in 1:4){
idx <- which(abs(cor_mat) == cor_vec[i], arr.ind = T)
idx1 <- idx[1]; idx2 <- idx[2]
plot(dat[,idx1], dat[,idx2], col = col_info_esvd$col_code[cluster_labels],
pch = 16, xlab = paste0(colnames(dat)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat)[idx2], ", (", idx2, ")"))
}
#plot the lowest correlations
par(mfrow = c(2,2))
for(i in 1:4){
idx <- which(abs(cor_mat) == rev(cor_vec)[i], arr.ind = T)
idx1 <- idx[1]; idx2 <- idx[2]
plot(dat[,idx1], dat[,idx2], col = col_info_esvd$col_code[cluster_labels],
pch = 16, xlab = paste0(colnames(dat)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat)[idx2], ", (", idx2, ")"))
}
#plot the lowest correlations
par(mfrow = c(2,2))
for(i in 1:4){
idx <- which(abs(cor_mat) == rev(cor_vec)[i], arr.ind = T)
idx1 <- idx[1]; idx2 <- idx[2]
plot(dat[,idx1], dat[,idx2], col = col_info_esvd$col_code[cluster_labels],
pch = 16, xlab = paste0(colnames(dat)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat)[idx2], ", (", idx2, ")"),
main = paste0("Correlation of ", round(cor_mat[idx1, idx2], 2)))
}
#plot the high correlations
par(mfrow = c(2,2))
for(i in 1:4){
idx <- which(abs(cor_mat) == cor_vec[i], arr.ind = T)
idx1 <- idx[1]; idx2 <- idx[2]
plot(dat[,idx1], dat[,idx2], col = col_info_esvd$col_code[cluster_labels],
pch = 16, xlab = paste0(colnames(dat)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat)[idx2], ", (", idx2, ")"),
main = paste0("Correlation of ", round(cor_mat[idx1, idx2], 2)))
}
#plot the lowest correlations
par(mfrow = c(2,2))
for(i in 1:4){
idx <- which(abs(cor_mat) == rev(cor_vec)[i], arr.ind = T)
idx1 <- idx[1]; idx2 <- idx[2]
plot(dat[,idx1], dat[,idx2], col = col_info_esvd$col_code[cluster_labels],
pch = 16, xlab = paste0(colnames(dat)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat)[idx2], ", (", idx2, ")"),
main = paste0("Correlation of ", round(cor_mat[idx1, idx2], 3)))
}
#plot the high correlations
par(mfrow = c(2,2))
for(i in 1:4){
idx <- which(abs(cor_mat) == cor_vec[i], arr.ind = T)
idx1 <- idx[1]; idx2 <- idx[2]
plot(dat[,idx1], dat[,idx2], col = col_info_esvd$col_code[cluster_labels], asp = T,
pch = 16, xlab = paste0(colnames(dat)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat)[idx2], ", (", idx2, ")"),
main = paste0("Correlation of ", round(cor_mat[idx1, idx2], 3)))
}
#plot the lowest correlations
par(mfrow = c(2,2))
for(i in 1:4){
idx <- which(abs(cor_mat) == rev(cor_vec)[i], arr.ind = T)
idx1 <- idx[1]; idx2 <- idx[2]
plot(dat[,idx1], dat[,idx2], col = col_info_esvd$col_code[cluster_labels], asp = T,
pch = 16, xlab = paste0(colnames(dat)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat)[idx2], ", (", idx2, ")"),
main = paste0("Correlation of ", round(cor_mat[idx1, idx2], 3)))
}
rm(list=ls())
load("../../../Kathryn Roeder - private/esvd/esvd/results/submission_round2/step5_trajectory_original.RData")
write.csv(dat_impute, file = "../../data/esvd_raw.csv", quote = F)
dat_impute[1:5,1:5]
dat <- read.csv("../../data/esvd_preprocessed.csv", row.names = 1)
dat_raw <- read.csv("../../data/esvd_raw.csv.csv", row.names = 1)
dat_raw <- read.csv("../../data/esvd_raw.csv", row.names = 1)
cell_type <- read.csv("../../data/esvd_cell_type.csv", row.names = 1)
par(mfrow = c(2,2))
for(i in 1:4){
set.seed(i)
rand_vec <- sample(1:ncol(dat_raw), 2)
idx1 <- rand_vec[1]; idx2 <- rand_vec[2]
plot(dat_raw[,idx1], dat_raw[,idx2], col = col_info_esvd$col_code[cluster_labels],
pch = 16, xlab = paste0(colnames(dat_raw)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat_raw)[idx2], ", (", idx2, ")"), asp = T)
}
cluster_labels <- as.numeric(as.factor(cell_type$cell_type))
table(cluster_labels)
color_func <- function(alpha = 0.2){
c(rgb(240/255, 228/255, 66/255, alpha), #yellow
rgb(86/255, 180/255, 233/255, alpha), #skyblue
rgb(0/255, 158/255, 115/255, alpha), #bluish green
rgb(0/255, 114/255, 178/255,alpha), #blue
rgb(230/255, 159/255, 0/255,alpha), #orange
rgb(100/255, 100/255, 100/255, alpha)) #gray
}
color_name_vec <- c("yellow", "skyblue", "bluish green", "blue", "orange", "gray")
num_order_vec_esvd <- c(5, rep(3,2), c(6,1,1,4,4,4), rep(2,2),  rep(5,2))
col_vec_esvd <- color_func(0.5)[num_order_vec_esvd]
col_name_esvd <- color_name_vec[num_order_vec_esvd]
order_vec_esvd <- c(3, 5.1, 5.2, seq(6.1, 6.6, by = 0.1), 4.1, 4.2, 2, 1)
col_info_esvd <- data.frame(name = levels(as.factor(cell_type$cell_type)),
idx = sort(unique(cluster_labels)),
order = order_vec_esvd,
col_name = col_name_esvd,
col_code = col_vec_esvd)
col_info_esvd$factor_idx <- as.numeric(as.factor(col_info_esvd$col_name))
col_info_esvd[,c(5,6)] <- col_info_esvd[,c(6,5)]
colnames(col_info_esvd)[c(5,6)] <- colnames(col_info_esvd)[c(6,5)]
col_info_esvd
par(mfrow = c(2,2))
for(i in 1:4){
set.seed(i)
rand_vec <- sample(1:ncol(dat_raw), 2)
idx1 <- rand_vec[1]; idx2 <- rand_vec[2]
plot(dat_raw[,idx1], dat_raw[,idx2], col = col_info_esvd$col_code[cluster_labels],
pch = 16, xlab = paste0(colnames(dat_raw)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat_raw)[idx2], ", (", idx2, ")"), asp = T)
}
cor_mat_raw <- stats::cor(dat_raw)
cor_mat_raw[upper.tri(cor_mat_raw, diag = T)] <- NA
cor_mat_raw[1:5,1:5]
# plot the smallest correlations
cor_vec_raw <- sort(abs(cor_mat_raw), decreasing = T)
plot(cor_vec_raw)
#plot the high correlations
par(mfrow = c(2,2))
for(i in 1:4){
idx <- which(abs(cor_mat_raw) == cor_vec_raw[i], arr.ind = T)
idx1 <- idx[1]; idx2 <- idx[2]
plot(dat_raw[,idx1], dat_raw[,idx2], col = col_info_esvd$col_code[cluster_labels], asp = T,
pch = 16, xlab = paste0(colnames(dat_raw)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat_raw)[idx2], ", (", idx2, ")"),
main = paste0("Correlation of ", round(cor_mat[idx1, idx2], 3)))
}
#plot the high correlations
par(mfrow = c(2,2))
for(i in 1:4){
idx <- which(abs(cor_mat_raw) == cor_vec_raw[i], arr.ind = T)
idx1 <- idx[1]; idx2 <- idx[2]
plot(dat_raw[,idx1], dat_raw[,idx2], col = col_info_esvd$col_code[cluster_labels], asp = T,
pch = 16, xlab = paste0(colnames(dat_raw)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat_raw)[idx2], ", (", idx2, ")"),
main = paste0("Correlation of ", round(cor_mat_raw[idx1, idx2], 3)))
}
#plot the lowest correlations
par(mfrow = c(2,2))
for(i in 1:4){
idx <- which(abs(cor_mat_raw) == rev(cor_vec_raw)[i], arr.ind = T)
idx1 <- idx[1]; idx2 <- idx[2]
plot(dat_raw[,idx1], dat_raw[,idx2], col = col_info_esvd$col_code[cluster_labels], asp = T,
pch = 16, xlab = paste0(colnames(dat_raw)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat_raw)[idx2], ", (", idx2, ")"),
main = paste0("Correlation of ", round(cor_mat_raw[idx1, idx2], 3)))
}
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("../../data/Zeisel_expr.RData")
cell_type <- read.table("../../data/Zeisel_cell_info.txt", sep = "\t")
dat[1:5,1:5]
dat <- read.csv("../../data/Zeisel_preprocessed.csv")
cell_type <- read.table("../../data/Zeisel_cell_info.txt", sep = "\t")
dat[1:5,1:5]
head(cell_type)
dim(dat)
dim(cell_type)
rm(list=ls())
load("../../data/Zeisel_expr.RData")
dat[1:5,1:5]
# remove genes with too many zeros
zero_vec <- apply(dat, 2, function(x){length(which(x == 0))/length(x)})
quantile(zero_vec)
plot(sort(zero_vec))
idx <- which(zero_vec <= 0.9)
dat <- dat[,idx]
# edit cell names
rownames(dat) <- stringr::str_replace(rownames(dat), "_", "-")
colnames(dat) <- stringr::str_replace(colnames(dat), "_", "-")
seurat_obj <- Seurat::CreateSeuratObject(counts = t(dat),
project = "Zeisel", min.cells = 0, min.features = 0)
seurat_obj <- Seurat::NormalizeData(seurat_obj, normalization.method = "LogNormalize",
scale.factor = 10^4)
seurat_obj <- Seurat::ScaleData(seurat_obj, verbose=F) # scale for each gene
seurat_obj <- Seurat::FindVariableFeatures(seurat_obj, selection.method = "vst")
hvg <- Seurat::VariableFeatures(object = seurat_obj)
dat <- t(seurat_obj@assays$RNA@scale.data)
dim(dat)
dat <- dat[,hvg]
dim(dat)
write.csv(dat, file = "../../data/Zeisel_preprocessed.csv", quote = F)
svd_res <- svd(dat)
plot(svd_res$d)
plot(svd_res$d[1:100])
d <- 20
dat_impute <- svd_res$u[,1:d] %*% diag(svd_res$d[1:d]) %*% t(svd_res$v[,1:d])
dat = dat_impute
cell_type <- read.table("../../data/Zeisel_cell_info.txt", sep = "\t")
cell_type <- read.table("../../data/Zeisel_cell_info.txt", sep = "\t", header = 1)
cluster_labels <- as.numeric(as.factor(cell_type$level1class))
par(mfrow = c(2,2))
for(i in 1:4){
set.seed(i)
rand_vec <- sample(1:ncol(dat), 2)
idx1 <- rand_vec[1]; idx2 <- rand_vec[2]
plot(dat[,idx1], dat[,idx2], col = cluster_labels,
pch = 16, xlab = paste0(colnames(dat)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat)[idx2], ", (", idx2, ")"), asp = T)
}
write.csv(dat_impute, file = "../../data/Zeisel_preprocessed.csv", quote = F)
dat <- read.csv("../../data/Zeisel_preprocessed.csv")
cell_type <- read.table("../../data/Zeisel_cell_info.txt", sep = "\t", header = 1)
dat[1:5,1:5]
head(cell_type)
dim(dat)
dim(cell_type)
cluster_labels <- as.numeric(as.factor(cell_type$level1class))
par(mfrow = c(2,2))
for(i in 1:4){
set.seed(i)
rand_vec <- sample(1:ncol(dat), 2)
idx1 <- rand_vec[1]; idx2 <- rand_vec[2]
plot(dat[,idx1], dat[,idx2], col = cluster_labels,
pch = 16, xlab = paste0(colnames(dat)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat)[idx2], ", (", idx2, ")"), asp = T)
}
rm(list=ls())
load("../../data/Zeisel_expr.RData")
dat[1:5,1:5]
# remove genes with too many zeros
zero_vec <- apply(dat, 2, function(x){length(which(x == 0))/length(x)})
quantile(zero_vec)
plot(sort(zero_vec))
idx <- which(zero_vec <= 0.9)
dat <- dat[,idx]
# edit cell names
rownames(dat) <- stringr::str_replace(rownames(dat), "_", "-")
colnames(dat) <- stringr::str_replace(colnames(dat), "_", "-")
seurat_obj <- Seurat::CreateSeuratObject(counts = t(dat),
project = "Zeisel", min.cells = 0, min.features = 0)
seurat_obj <- Seurat::NormalizeData(seurat_obj, normalization.method = "LogNormalize",
scale.factor = 10^4)
seurat_obj <- Seurat::ScaleData(seurat_obj, verbose=F) # scale for each gene
seurat_obj <- Seurat::FindVariableFeatures(seurat_obj, selection.method = "vst")
hvg <- Seurat::VariableFeatures(object = seurat_obj)
dat <- t(seurat_obj@assays$RNA@scale.data)
dim(dat)
dat <- dat[,hvg]
dim(dat)
svd_res <- svd(dat)
plot(svd_res$d[1:100])
d <- 20
dat_impute <- svd_res$u[,1:d] %*% diag(svd_res$d[1:d]) %*% t(svd_res$v[,1:d])
colnames(dat_impute) <- colnames(dat)
rownames(dat_impute) <- rownames(dat)
write.csv(dat_impute, file = "../../data/Zeisel_preprocessed.csv", quote = F)
dat_impute[1:5,1:5]
dat <- read.csv("../../data/Zeisel_preprocessed.csv")
cell_type <- read.table("../../data/Zeisel_cell_info.txt", sep = "\t", header = 1)
dat[1:5,1:5]
head(cell_type)
dim(dat)
dim(cell_type)
par(mfrow = c(2,2))
for(i in 1:4){
set.seed(i)
rand_vec <- sample(1:ncol(dat), 2)
idx1 <- rand_vec[1]; idx2 <- rand_vec[2]
plot(dat[,idx1], dat[,idx2], col = cluster_labels,
pch = 16, xlab = paste0(colnames(dat)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat)[idx2], ", (", idx2, ")"), asp = T)
}
cluster_labels <- as.numeric(as.factor(cell_type$level1class))
par(mfrow = c(2,2))
for(i in 1:4){
set.seed(i)
rand_vec <- sample(1:ncol(dat), 2)
idx1 <- rand_vec[1]; idx2 <- rand_vec[2]
plot(dat[,idx1], dat[,idx2], col = cluster_labels,
pch = 16, xlab = paste0(colnames(dat)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat)[idx2], ", (", idx2, ")"), asp = T)
}
cor_mat <- stats::cor(dat)
dat <- as.matrix(dat)
cor_mat <- stats::cor(dat)
dat[1:5,1:5]
dat <- read.csv("../../data/Zeisel_preprocessed.csv", row.names = 1)
dat[1:5,1:5]
cor_mat <- stats::cor(dat)
cor_mat[upper.tri(cor_mat, diag = T)] <- NA
cor_mat[1:5,1:5]
# plot the smallest correlations
cor_vec <- sort(abs(cor_mat), decreasing = T)
plot(cor_vec)
#plot the high correlations
par(mfrow = c(2,2))
for(i in 1:4){
idx <- which(abs(cor_mat) == cor_vec[i], arr.ind = T)
idx1 <- idx[1]; idx2 <- idx[2]
plot(dat[,idx1], dat[,idx2], col = cluster_labels, asp = T,
pch = 16, xlab = paste0(colnames(dat)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat)[idx2], ", (", idx2, ")"),
main = paste0("Correlation of ", round(cor_mat[idx1, idx2], 3)))
}
#plot the lowest correlations
par(mfrow = c(2,2))
for(i in 1:4){
idx <- which(abs(cor_mat) == rev(cor_vec)[i], arr.ind = T)
idx1 <- idx[1]; idx2 <- idx[2]
plot(dat[,idx1], dat[,idx2], col = cluster_labels, asp = T,
pch = 16, xlab = paste0(colnames(dat)[idx1], ", (", idx1, ")"),
ylab = paste0(colnames(dat)[idx2], ", (", idx2, ")"),
main = paste0("Correlation of ", round(cor_mat[idx1, idx2], 3)))
}
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("../../data/esvd_preprocessed.csv", row.names = 1)
cell_type <- read.csv("../../data/esvd_cell_type.csv", row.names = 1)
dat[1:5,1:5]
dat_raw[1:5,1:5]
head(cell_type)
dim(dat)
dim(dat_raw)
dim(cell_type)
cluster_labels <- as.numeric(as.factor(cell_type$cell_type))
table(cluster_labels)
color_func <- function(alpha = 0.2){
c(rgb(240/255, 228/255, 66/255, alpha), #yellow
rgb(86/255, 180/255, 233/255, alpha), #skyblue
rgb(0/255, 158/255, 115/255, alpha), #bluish green
rgb(0/255, 114/255, 178/255,alpha), #blue
rgb(230/255, 159/255, 0/255,alpha), #orange
rgb(100/255, 100/255, 100/255, alpha)) #gray
}
color_name_vec <- c("yellow", "skyblue", "bluish green", "blue", "orange", "gray")
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("../../data/Zeisel_preprocessed.csv", row.names = 1)
cell_type <- read.table("../../data/Zeisel_cell_info.txt", sep = "\t", header = 1)
dat[1:5,1:5]
head(cell_type)
dim(dat)
dim(cell_type)
cluster_labels <- as.numeric(as.factor(cell_type$level1class))
plot(dat[,33], dat[,673], col = cluster_labels, pch = 16)
plot(dat[,33], dat[,673], col = cluster_labels, pch = 16, asp = T)
?hclust
hc <- hclust(dist(USArrests), "ave")
plot(hc)
hc$order
